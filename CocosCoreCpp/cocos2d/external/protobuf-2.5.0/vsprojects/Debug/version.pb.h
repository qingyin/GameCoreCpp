// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: version.proto

#ifndef PROTOBUF_version_2eproto__INCLUDED
#define PROTOBUF_version_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_version_2eproto();
void protobuf_AssignDesc_version_2eproto();
void protobuf_ShutdownFile_version_2eproto();


enum protocol_Version {
  protocol_version = 3
};
bool protocol_Version_IsValid(int value);
const protocol_Version protocol_Version_MIN = protocol_version;
const protocol_Version protocol_Version_MAX = protocol_version;
const int protocol_Version_ARRAYSIZE = protocol_Version_MAX + 1;

const ::google::protobuf::EnumDescriptor* protocol_Version_descriptor();
inline const ::std::string& protocol_Version_Name(protocol_Version value) {
  return ::google::protobuf::internal::NameOfEnum(
    protocol_Version_descriptor(), value);
}
inline bool protocol_Version_Parse(
    const ::std::string& name, protocol_Version* value) {
  return ::google::protobuf::internal::ParseNamedEnum<protocol_Version>(
    protocol_Version_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::protocol_Version>() {
  return ::pb::protocol_Version_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_version_2eproto__INCLUDED

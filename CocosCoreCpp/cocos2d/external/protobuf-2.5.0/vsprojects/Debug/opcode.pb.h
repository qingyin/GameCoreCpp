// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opcode.proto

#ifndef PROTOBUF_opcode_2eproto__INCLUDED
#define PROTOBUF_opcode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_opcode_2eproto();
void protobuf_AssignDesc_opcode_2eproto();
void protobuf_ShutdownFile_opcode_2eproto();


enum Opcode {
  MSG_PING_PONG = 1,
  MSG_LOGIN = 2,
  MSG_JOIN_TABLE = 3,
  MSG_JOIN_TABLE_BROADCAST = 4,
  MSG_LEAVE_TABLE = 5,
  MSG_LEAVE_TABLE_BROADCAST = 6,
  MSG_ROUND_START_BROADCAST = 101,
  MSG_ROUND_RESULT_BROADCAST = 102,
  MSG_REPLACE = 103,
  MSG_REPLACE_BROADCAST = 104,
  MSG_DISPATCH_BROADCAST = 105,
  MSG_GAME_END = 999,
  MSG_SOCIAL_BEGIN = 1000,
  MSG_SOCIAL_END = 1999,
  MSG_NET_BEGIN = 2000,
  MSG_NET_END = 2010
};
bool Opcode_IsValid(int value);
const Opcode Opcode_MIN = MSG_PING_PONG;
const Opcode Opcode_MAX = MSG_NET_END;
const int Opcode_ARRAYSIZE = Opcode_MAX + 1;

const ::google::protobuf::EnumDescriptor* Opcode_descriptor();
inline const ::std::string& Opcode_Name(Opcode value) {
  return ::google::protobuf::internal::NameOfEnum(
    Opcode_descriptor(), value);
}
inline bool Opcode_Parse(
    const ::std::string& name, Opcode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Opcode>(
    Opcode_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::Opcode>() {
  return ::pb::Opcode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_opcode_2eproto__INCLUDED

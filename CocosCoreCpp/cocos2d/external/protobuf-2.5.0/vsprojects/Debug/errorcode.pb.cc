// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: errorcode.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "errorcode.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_errorcode_2eproto() {
  protobuf_AddDesc_errorcode_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "errorcode.proto");
  GOOGLE_CHECK(file != NULL);
  ErrorCode_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_errorcode_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_errorcode_2eproto() {
}

void protobuf_AddDesc_errorcode_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017errorcode.proto\022\002pb*\276\003\n\tErrorCode\022\016\n\nE"
    "RROR_NONE\020\000\022\030\n\024ERROR_SERVER_CLOSING\020\001\022\034\n"
    "\030ERROR_SERVER_MAINTAINING\020\002\022\026\n\022ERROR_SYS"
    "TEM_ERROR\020\005\022\025\n\021ERROR_BAD_REQUEST\020\006\022\034\n\030ER"
    "ROR_PROTOCOL_UNMATCHED\020\007\022\033\n\027ERROR_SYSTEM"
    "_NOT_UNLOCK\020\010\022\030\n\024ERROR_USER_NOT_LOGIN\020\013\022"
    "\030\n\024ERROR_USER_FORBIDDEN\020\014\022\037\n\033ERROR_USER_"
    "WAITING_RESPONSE\020\r\022\032\n\026ERROR_PLAYER_NOT_E"
    "XIST\020\024\022\032\n\026ERROR_PLAYERNAME_EXIST\020\025\022 \n\034ER"
    "ROR_PLAYER_ALREADY_CREATED\020\026\022\032\n\026ERROR_NI"
    "CKNAME_INVALID\020\027\022\032\n\026ERROR_PLAYER_NOT_LOG"
    "IN\020\030\022\030\n\024ERROR_NICKNAME_EXIST\020\031", 470);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "errorcode.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_errorcode_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_errorcode_2eproto {
  StaticDescriptorInitializer_errorcode_2eproto() {
    protobuf_AddDesc_errorcode_2eproto();
  }
} static_descriptor_initializer_errorcode_2eproto_;
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorCode_descriptor_;
}
bool ErrorCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 5:
    case 6:
    case 7:
    case 8:
    case 11:
    case 12:
    case 13:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
